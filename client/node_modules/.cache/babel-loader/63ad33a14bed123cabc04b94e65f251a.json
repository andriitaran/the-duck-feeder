{"ast":null,"code":"var _jsxFileName = \"/Users/andriitaran/Desktop/the-duck-feeder/client/src/components/Feeding/Feeding.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  REACT_APP_BACKEND_URL,\n  REACT_APP_PORT\n} = process.env;\nexport const Feeding = props => {\n  _s();\n\n  const [selectedFeeding, setSelectedFeeding] = useState({});\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `${REACT_APP_BACKEND_URL}:${REACT_APP_PORT}/data`,\n      headers: {\n        \"auth-token\": `${sessionStorage.getItem(\"authToken\")}`,\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => {\n      const feeding = res.data.find(feeding => {\n        return feeding._id === props.match.params.id;\n      });\n      setSelectedFeeding(feeding);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"brew\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brew-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"brew-container__header\",\n        children: \"Feeding Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brew-container__brewinfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"brew-container__brewinfo--date\",\n          children: [\"Time of feeding :\", moment(`${selectedFeeding.time}`).format(\"MMMM Do, YYYY, LT\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"brew-container__brewinfo--grind\",\n          children: [\"Location : \", selectedFeeding.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"brew-container__brewinfo--ratio\",\n          children: [\"Food Type : \", selectedFeeding.foodType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"brew-container__brewinfo--grind\",\n          children: [\"Amount of food : \", selectedFeeding.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"brew-container__brewinfo--grind\",\n          children: [\"Number of ducks fed : \", selectedFeeding.number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Feeding, \"YiCZu2tqP8EgpW7J04zFq5wcJrw=\");\n\n_c = Feeding;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feeding\");","map":{"version":3,"sources":["/Users/andriitaran/Desktop/the-duck-feeder/client/src/components/Feeding/Feeding.component.jsx"],"names":["React","useState","useEffect","axios","moment","REACT_APP_BACKEND_URL","REACT_APP_PORT","process","env","Feeding","props","selectedFeeding","setSelectedFeeding","method","url","headers","sessionStorage","getItem","then","res","feeding","data","find","_id","match","params","id","time","format","location","foodType","amount","number"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAM;AAAEC,EAAAA,qBAAF;AAAyBC,EAAAA;AAAzB,IAA4CC,OAAO,CAACC,GAA1D;AAEA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,EAAD,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAAC;AACJU,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAG,GAAET,qBAAsB,IAAGC,cAAe,OAF5C;AAGJS,MAAAA,OAAO,EAAE;AACP,sBAAe,GAAEC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAoC,EAD9C;AAEP,uCAA+B;AAFxB;AAHL,KAAD,CAAL,CAOGC,IAPH,CAOSC,GAAD,IAAS;AACf,YAAMC,OAAO,GAAGD,GAAG,CAACE,IAAJ,CAASC,IAAT,CAAeF,OAAD,IAAa;AACzC,eAAOA,OAAO,CAACG,GAAR,KAAgBb,KAAK,CAACc,KAAN,CAAYC,MAAZ,CAAmBC,EAA1C;AACD,OAFe,CAAhB;AAGAd,MAAAA,kBAAkB,CAACQ,OAAD,CAAlB;AACD,KAZD;AAaD,GAdQ,CAAT;AAgBA,sBACE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,gCAAhB;AAAA,0CAEGhB,MAAM,CAAE,GAAEO,eAAe,CAACgB,IAAK,EAAzB,CAAN,CAAkCC,MAAlC,CAAyC,mBAAzC,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAM,UAAA,SAAS,EAAC,iCAAhB;AAAA,oCACcjB,eAAe,CAACkB,QAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE;AAAM,UAAA,SAAS,EAAC,iCAAhB;AAAA,qCACelB,eAAe,CAACmB,QAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAWE;AAAM,UAAA,SAAS,EAAC,iCAAhB;AAAA,0CACoBnB,eAAe,CAACoB,MADpC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAcE;AAAM,UAAA,SAAS,EAAC,iCAAhB;AAAA,+CACyBpB,eAAe,CAACqB,MADzC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA5CM;;GAAMvB,O;;KAAAA,O","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nconst { REACT_APP_BACKEND_URL, REACT_APP_PORT } = process.env;\n\nexport const Feeding = (props) => {\n  const [selectedFeeding, setSelectedFeeding] = useState({});\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `${REACT_APP_BACKEND_URL}:${REACT_APP_PORT}/data`,\n      headers: {\n        \"auth-token\": `${sessionStorage.getItem(\"authToken\")}`,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    }).then((res) => {\n      const feeding = res.data.find((feeding) => {\n        return feeding._id === props.match.params.id;\n      });\n      setSelectedFeeding(feeding);\n    });\n  });\n\n  return (\n    <section className=\"brew\">\n      <div className=\"brew-container\">\n        <h3 className=\"brew-container__header\">Feeding Info</h3>\n        <div className=\"brew-container__brewinfo\">\n          <span className=\"brew-container__brewinfo--date\">\n            Time of feeding :\n            {moment(`${selectedFeeding.time}`).format(\"MMMM Do, YYYY, LT\")}\n          </span>\n          <span className=\"brew-container__brewinfo--grind\">\n            Location : {selectedFeeding.location}\n          </span>\n          <span className=\"brew-container__brewinfo--ratio\">\n            Food Type : {selectedFeeding.foodType}\n          </span>\n          <span className=\"brew-container__brewinfo--grind\">\n            Amount of food : {selectedFeeding.amount}\n          </span>\n          <span className=\"brew-container__brewinfo--grind\">\n            Number of ducks fed : {selectedFeeding.number}\n          </span>\n        </div>\n      </div>\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}