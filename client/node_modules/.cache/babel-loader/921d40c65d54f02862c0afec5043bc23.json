{"ast":null,"code":"var _jsxFileName = \"/Users/andriitaran/Desktop/the-duck-feeder/client/src/components/Home/Home.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { v1 as uuid } from \"uuid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  const [error, setError] = useState(\"\");\n  const [foodType, setFoodType] = useState(\"seeds\");\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [address, setAddress] = useState(\"\");\n  const [coordinates, setCoordinates] = useState({\n    lat: null,\n    lng: null\n  });\n\n  const handleFoodTypeChange = e => {\n    const selectedFoodType = e.target.value;\n    setFoodType(selectedFoodType);\n  };\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  const handleLocationSelect = async address => {\n    const results = await geocodeByAddress(address);\n    const latLng = await getLatLng(results[0]);\n    setAddress(address);\n    setCoordinates(latLng);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      await axios({\n        method: \"post\",\n        url: \"http://localhost:5000/data/\",\n        data: {\n          id: uuid(),\n          time: {\n            selectedDate\n          },\n          food: {\n            foodType\n          },\n          location: {\n            coordinates\n          },\n          number: event.target.number.value,\n          amount: event.target.number.amount\n        }\n      });\n      console.log(\"posted\");\n    } catch (err) {\n      setError(err.response.data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"feeding-info\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feeding-info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"feeding-info-container__header\",\n        children: \"Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"feeding-info-container__form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"feeding-info-container__form--time\",\n          for: \"time\",\n          children: \"What time the ducks are fed?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          className: \"feeding-info-container__form--time-input\",\n          type: \"date\",\n          id: \"time\",\n          name: \"time\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            id: \"date-picker-dialog\",\n            format: \"MM/dd/yyyy\",\n            value: selectedDate,\n            onChange: handleDateChange,\n            KeyboardButtonProps: {\n              \"aria-label\": \"change date\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(KeyboardTimePicker, {\n            id: \"time-picker\",\n            value: selectedDate,\n            onChange: handleDateChange,\n            KeyboardButtonProps: {\n              \"aria-label\": \"change time\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"feeding-info-container__form--food\",\n          for: \"food\",\n          children: \"What food the ducks are fed?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          id: \"feeding-info-container__form--food-select\",\n          value: foodType,\n          defaultValue: foodType,\n          onChange: handleFoodTypeChange,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"seeds\",\n            children: \"Seeds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"corn\",\n            children: \"Corn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"oats\",\n            children: \"Oats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"feeding-info-container__form--location\",\n          for: \"location\",\n          children: \"What are the ducks fed?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n          value: address,\n          onChange: setAddress,\n          onSelect: handleLocationSelect,\n          children: ({\n            getInputProps,\n            suggestions,\n            getSuggestionItemProps,\n            loading\n          }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps({\n                placeholder: \"Type address\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"...loading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 30\n              }, this) : null, suggestions.map(suggestion => {\n                const style = {\n                  backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\"\n                };\n                return /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion, {\n                    style\n                  }),\n                  children: suggestion.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"feeding-info-container__form--number\",\n          for: \"number\",\n          children: \"How many ducks are fed?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"feeding-info-container__form--number-input\",\n          type: \"number\",\n          id: \"number\",\n          name: \"number\",\n          placeholder: \"Enter the number of ducks fed\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"feeding-info-container__form--amount\",\n          for: \"amount\",\n          children: \"How much food the ducks are fed?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"eeding-info-container__form--amount-input\",\n          type: \"number\",\n          id: \"amount\",\n          name: \"amount\",\n          placeholder: \"Enter amount of food in grams\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"feeding-info-container__form--register\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"TF9cNGYK+l+deU224nlx3LMG9IE=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/andriitaran/Desktop/the-duck-feeder/client/src/components/Home/Home.component.jsx"],"names":["React","useState","axios","v1","uuid","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","FormHelperText","FormControl","Select","MenuItem","PlacesAutocomplete","geocodeByAddress","getLatLng","Home","error","setError","foodType","setFoodType","selectedDate","setSelectedDate","Date","address","setAddress","coordinates","setCoordinates","lat","lng","handleFoodTypeChange","e","selectedFoodType","target","value","handleDateChange","date","handleLocationSelect","results","latLng","handleSubmit","event","preventDefault","method","url","data","id","time","food","location","number","amount","console","log","err","response","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","style","backgroundColor","active","description"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { v1 as uuid } from \"uuid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\n\nexport const Home = () => {\n  const [error, setError] = useState(\"\");\n\n  const [foodType, setFoodType] = useState(\"seeds\");\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const [address, setAddress] = useState(\"\");\n\n  const [coordinates, setCoordinates] = useState({\n    lat: null,\n    lng: null,\n  });\n\n  const handleFoodTypeChange = (e) => {\n    const selectedFoodType = e.target.value;\n    setFoodType(selectedFoodType);\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleLocationSelect = async (address) => {\n    const results = await geocodeByAddress(address);\n    const latLng = await getLatLng(results[0]);\n    setAddress(address);\n    setCoordinates(latLng);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await axios({\n        method: \"post\",\n        url: \"http://localhost:5000/data/\",\n        data: {\n          id: uuid(),\n          time: { selectedDate },\n          food: { foodType },\n          location: { coordinates },\n          number: event.target.number.value,\n          amount: event.target.number.amount,\n        },\n      });\n      console.log(\"posted\");\n    } catch (err) {\n      setError(err.response.data);\n    }\n  };\n\n  return (\n    <section className=\"feeding-info\">\n      <div className=\"feeding-info-container\">\n        <h1 className=\"feeding-info-container__header\">Form</h1>\n        <form className=\"feeding-info-container__form\" onSubmit={handleSubmit}>\n          <label className=\"feeding-info-container__form--time\" for=\"time\">\n            What time the ducks are fed?\n          </label>\n          <MuiPickersUtilsProvider\n            utils={DateFnsUtils}\n            className=\"feeding-info-container__form--time-input\"\n            type=\"date\"\n            id=\"time\"\n            name=\"time\"\n            required\n          >\n            <KeyboardDatePicker\n              id=\"date-picker-dialog\"\n              format=\"MM/dd/yyyy\"\n              value={selectedDate}\n              onChange={handleDateChange}\n              KeyboardButtonProps={{\n                \"aria-label\": \"change date\",\n              }}\n            />\n            <KeyboardTimePicker\n              id=\"time-picker\"\n              value={selectedDate}\n              onChange={handleDateChange}\n              KeyboardButtonProps={{\n                \"aria-label\": \"change time\",\n              }}\n            />\n          </MuiPickersUtilsProvider>\n          <label className=\"feeding-info-container__form--food\" for=\"food\">\n            What food the ducks are fed?\n          </label>\n          <Select\n            id=\"feeding-info-container__form--food-select\"\n            value={foodType}\n            defaultValue={foodType}\n            onChange={handleFoodTypeChange}\n          >\n            <MenuItem value={\"seeds\"}>Seeds</MenuItem>\n            <MenuItem value={\"corn\"}>Corn</MenuItem>\n            <MenuItem value={\"oats\"}>Oats</MenuItem>\n          </Select>\n          <label\n            className=\"feeding-info-container__form--location\"\n            for=\"location\"\n          >\n            What are the ducks fed?\n          </label>\n          <PlacesAutocomplete\n            value={address}\n            onChange={setAddress}\n            onSelect={handleLocationSelect}\n          >\n            {({\n              getInputProps,\n              suggestions,\n              getSuggestionItemProps,\n              loading,\n            }) => (\n              <>\n                <input {...getInputProps({ placeholder: \"Type address\" })} />\n                <div>\n                  {loading ? <div>...loading</div> : null}\n\n                  {suggestions.map((suggestion) => {\n                    const style = {\n                      backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\",\n                    };\n\n                    return (\n                      <div {...getSuggestionItemProps(suggestion, { style })}>\n                        {suggestion.description}\n                      </div>\n                    );\n                  })}\n                </div>\n              </>\n            )}\n          </PlacesAutocomplete>\n          <label className=\"feeding-info-container__form--number\" for=\"number\">\n            How many ducks are fed?\n          </label>\n          <input\n            className=\"feeding-info-container__form--number-input\"\n            type=\"number\"\n            id=\"number\"\n            name=\"number\"\n            placeholder=\"Enter the number of ducks fed\"\n            required\n          />\n          <label className=\"feeding-info-container__form--amount\" for=\"amount\">\n            How much food the ducks are fed?\n          </label>\n          <input\n            className=\"eeding-info-container__form--amount-input\"\n            type=\"number\"\n            id=\"amount\"\n            name=\"amount\"\n            placeholder=\"Enter amount of food in grams\"\n            required\n          />\n          <button\n            className=\"feeding-info-container__form--register\"\n            type=\"submit\"\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}