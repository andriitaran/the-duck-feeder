[{"/Users/andriitaran/Desktop/the-duck-feeder/client/src/index.js":"1","/Users/andriitaran/Desktop/the-duck-feeder/client/src/App.js":"2","/Users/andriitaran/Desktop/the-duck-feeder/client/src/reportWebVitals.js":"3","/Users/andriitaran/Desktop/the-duck-feeder/client/src/components/Home/Home.component.jsx":"4"},{"size":500,"mtime":1624907260162,"results":"5","hashOfConfig":"6"},{"size":376,"mtime":1624949374940,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1624907260162,"results":"8","hashOfConfig":"6"},{"size":5647,"mtime":1624944687270,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1tqanx8",{"filePath":"13","messages":"14","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/Users/andriitaran/Desktop/the-duck-feeder/client/src/index.js",[],["20","21"],"/Users/andriitaran/Desktop/the-duck-feeder/client/src/App.js",["22","23","24","25"],"/Users/andriitaran/Desktop/the-duck-feeder/client/src/reportWebVitals.js",[],"/Users/andriitaran/Desktop/the-duck-feeder/client/src/components/Home/Home.component.jsx",["26","27","28","29"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\n\nexport const Home = () => {\n  const [error, setError] = useState(\"\");\n\n  const [foodType, setFoodType] = useState(\"seeds\");\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const [address, setAddress] = useState(\"\");\n\n  const [coordinates, setCoordinates] = useState({ lat: null, lng: null });\n\n  const handleFoodTypeChange = (e) => {\n    const selectedFoodType = e.target.value;\n    setFoodType(selectedFoodType);\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleLocationSelect = async (address) => {\n    const results = await geocodeByAddress(address);\n    const latLng = await getLatLng(results[0]);\n    console.log(latLng);\n    setAddress(address);\n    setCoordinates(latLng);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await axios({\n        method: \"post\",\n        url: \"http://localhost:5000/data/\",\n        data: {\n          time: selectedDate,\n          foodType: foodType,\n          location: address,\n          coordinates: coordinates,\n          number: event.target.number.value,\n          amount: event.target.amount.value,\n        },\n      });\n    } catch (err) {\n      // setError(err.response.data);\n    }\n  };\n\n  return (\n    <section className=\"feeding-info\">\n      <div className=\"feeding-info-container\">\n        <h1 className=\"feeding-info-container__header\">Form</h1>\n        <form className=\"feeding-info-container__form\" onSubmit={handleSubmit}>\n          <label className=\"feeding-info-container__form--time\" for=\"time\">\n            What time the ducks are fed?\n          </label>\n          <MuiPickersUtilsProvider\n            utils={DateFnsUtils}\n            className=\"feeding-info-container__form--time-input\"\n            type=\"date\"\n            id=\"time\"\n            name=\"time\"\n            required\n          >\n            <KeyboardDatePicker\n              id=\"date-picker-dialog\"\n              format=\"MM/dd/yyyy\"\n              value={selectedDate}\n              onChange={handleDateChange}\n              KeyboardButtonProps={{\n                \"aria-label\": \"change date\",\n              }}\n            />\n            <KeyboardTimePicker\n              id=\"time-picker\"\n              value={selectedDate}\n              onChange={handleDateChange}\n              KeyboardButtonProps={{\n                \"aria-label\": \"change time\",\n              }}\n            />\n          </MuiPickersUtilsProvider>\n          <label className=\"feeding-info-container__form--food\" for=\"food\">\n            What food the ducks are fed?\n          </label>\n          <Select\n            id=\"feeding-info-container__form--food-select\"\n            value={foodType}\n            defaultValue={foodType}\n            onChange={handleFoodTypeChange}\n          >\n            <MenuItem value={\"seeds\"}>Seeds</MenuItem>\n            <MenuItem value={\"corn\"}>Corn</MenuItem>\n            <MenuItem value={\"oats\"}>Oats</MenuItem>\n          </Select>\n          <label\n            className=\"feeding-info-container__form--location\"\n            for=\"location\"\n          >\n            What are the ducks fed?\n          </label>\n          <PlacesAutocomplete\n            value={address}\n            onChange={setAddress}\n            onSelect={handleLocationSelect}\n          >\n            {({\n              getInputProps,\n              suggestions,\n              getSuggestionItemProps,\n              loading,\n            }) => (\n              <>\n                <input {...getInputProps({ placeholder: \"Type address\" })} />\n                <div>\n                  {loading ? <div>...loading</div> : null}\n\n                  {suggestions.map((suggestion) => {\n                    const style = {\n                      backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\",\n                    };\n\n                    return (\n                      <div {...getSuggestionItemProps(suggestion, { style })}>\n                        {suggestion.description}\n                      </div>\n                    );\n                  })}\n                </div>\n              </>\n            )}\n          </PlacesAutocomplete>\n          <label className=\"feeding-info-container__form--number\" for=\"number\">\n            How many ducks are fed?\n          </label>\n          <input\n            className=\"feeding-info-container__form--number-input\"\n            type=\"number\"\n            id=\"number\"\n            name=\"number\"\n            placeholder=\"Enter the number of ducks fed\"\n            required\n          />\n          <label className=\"feeding-info-container__form--amount\" for=\"amount\">\n            How much food the ducks are fed?\n          </label>\n          <input\n            className=\"eeding-info-container__form--amount-input\"\n            type=\"number\"\n            id=\"amount\"\n            name=\"amount\"\n            placeholder=\"Enter amount of food in grams\"\n            required\n          />\n          <button\n            className=\"feeding-info-container__form--register\"\n            type=\"submit\"\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n};\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":17,"nodeType":"36","messageId":"37","endLine":1,"endColumn":26},{"ruleId":"34","severity":1,"message":"38","line":4,"column":3,"nodeType":"36","messageId":"37","endLine":4,"endColumn":9},{"ruleId":"34","severity":1,"message":"39","line":5,"column":3,"nodeType":"36","messageId":"37","endLine":5,"endColumn":11},{"ruleId":"34","severity":1,"message":"40","line":8,"column":3,"nodeType":"36","messageId":"37","endLine":8,"endColumn":7},{"ruleId":"34","severity":1,"message":"41","line":9,"column":8,"nodeType":"36","messageId":"37","endLine":9,"endColumn":22},{"ruleId":"34","severity":1,"message":"42","line":10,"column":8,"nodeType":"36","messageId":"37","endLine":10,"endColumn":19},{"ruleId":"34","severity":1,"message":"43","line":19,"column":10,"nodeType":"36","messageId":"37","endLine":19,"endColumn":15},{"ruleId":"34","severity":1,"message":"44","line":19,"column":17,"nodeType":"36","messageId":"37","endLine":19,"endColumn":25},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Render' is defined but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","'FormHelperText' is defined but never used.","'FormControl' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]